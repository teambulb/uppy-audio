{"version":3,"names":["h","UIPlugin","MediaRecorder","register","connect","supportsMediaRecorder","RecordingScreen","PermissionsScreen","locale","packageJson","Audio","constructor","uppy","opts","options","Promise","reject","Error","then","hasAudio","setPluginState","getUserMedia","audio","stream","currentDeviceId","tracks","getAudioTracks","deviceId","getSettings","forEach","track","audioReady","catch","err","cameraError","info","message","isTypeSupported","preferredAudioMimeType","mimeType","e","stoppingBecauseOfMaxSize","addEventListener","event","push","data","restrictions","length","maxFileSize","totalSize","reduce","acc","chunk","size","averageChunkSize","expectedEndChunkSize","maxSize","Math","max","i18n","start","recordingLengthTimer","setInterval","currentRecordingLength","getPluginState","recordingLengthSeconds","isRecording","stopped","resolve","stop","clearInterval","file","recordedAudio","URL","createObjectURL","isRestriction","log","error","addFile","audioTracks","once","enumerateDevices","devices","audioSources","filter","device","kind","getFileTypeExtension","ext","navigator","mediaDevices","id","type","icon","defaultLocale","i18nInit","title","render","audioState","showAudioSourceDropdown","install","target","mount","ondevicechange","restartStream","audioSource","uninstall","unmount","some","find","blob","fileExtension","name","Date","now","Blob","source","VERSION","version"],"sources":["Audio.jsx"],"sourcesContent":["import { h } from 'preact'\n\nimport { UIPlugin } from '@uppy/core'\n\nimport { MediaRecorder, register } from 'extendable-media-recorder'\nimport { connect } from 'extendable-media-recorder-wav-encoder'\nimport supportsMediaRecorder from './supportsMediaRecorder.js'\nimport RecordingScreen from './RecordingScreen.jsx'\nimport PermissionsScreen from './PermissionsScreen.jsx'\nimport locale from './locale.js'\n\nimport packageJson from '../package.json'\n\n/**\n * Audio recording plugin\n */\nexport default class Audio extends UIPlugin {\n  static VERSION = packageJson.version\n\n  #stream = null\n\n  #audioActive = false\n\n  #recordingChunks = null\n\n  #recorder = null\n\n  #capturedMediaFile = null\n\n  #mediaDevices = null\n\n  #supportsUserMedia = null\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.#mediaDevices = navigator.mediaDevices\n    this.#supportsUserMedia = this.#mediaDevices != null\n    this.id = this.opts.id || 'Audio'\n    this.type = 'acquirer'\n    this.icon = () => (\n      <svg aria-hidden=\"true\" focusable=\"false\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\">\n        <g fill=\"none\" fill-rule=\"evenodd\">\n          <rect fill=\"#9B59B6\" width=\"32\" height=\"32\" rx=\"16\" />\n          <path d=\"M16 20c-2.21 0-4-1.71-4-3.818V9.818C12 7.71 13.79 6 16 6s4 1.71 4 3.818v6.364C20 18.29 18.21 20 16 20zm-6.364-7h.637c.351 0 .636.29.636.65v1.95c0 3.039 2.565 5.477 5.6 5.175 2.645-.264 4.582-2.692 4.582-5.407V13.65c0-.36.285-.65.636-.65h.637c.351 0 .636.29.636.65v1.631c0 3.642-2.544 6.888-6.045 7.382v1.387h2.227c.351 0 .636.29.636.65v.65c0 .36-.285.65-.636.65h-6.364a.643.643 0 0 1-.636-.65v-.65c0-.36.285-.65.636-.65h2.227v-1.372C11.637 22.2 9 19.212 9 15.6v-1.95c0-.36.285-.65.636-.65z\" fill=\"#FFF\" fill-rule=\"nonzero\" />\n        </g>\n      </svg>\n    )\n\n    this.defaultLocale = locale\n\n    this.opts = { ...opts }\n\n    this.i18nInit()\n    this.title = this.i18n('pluginNameAudio')\n\n    this.setPluginState({\n      hasAudio: false,\n      audioReady: false,\n      cameraError: null,\n      recordingLengthSeconds: 0,\n      audioSources: [],\n      currentDeviceId: null,\n    })\n  }\n\n  #hasAudioCheck () {\n    if (!this.#mediaDevices) {\n      return Promise.resolve(false)\n    }\n\n    return this.#mediaDevices.enumerateDevices().then(devices => {\n      return devices.some(device => device.kind === 'audioinput')\n    })\n  }\n\n  // eslint-disable-next-line consistent-return\n  #start = (options = null) => {\n    if (!this.#supportsUserMedia) {\n      return Promise.reject(new Error('Microphone access not supported'))\n    }\n\n    this.#audioActive = true\n\n    this.#hasAudioCheck().then(hasAudio => {\n      this.setPluginState({\n        hasAudio,\n      })\n\n      // ask user for access to their camera\n      return this.#mediaDevices.getUserMedia({ audio: true })\n        .then((stream) => {\n          this.#stream = stream\n\n          let currentDeviceId = null\n          const tracks = stream.getAudioTracks()\n\n          if (!options || !options.deviceId) {\n            currentDeviceId = tracks[0].getSettings().deviceId\n          } else {\n            tracks.forEach((track) => {\n              if (track.getSettings().deviceId === options.deviceId) {\n                currentDeviceId = track.getSettings().deviceId\n              }\n            })\n          }\n\n          // Update the sources now, so we can access the names.\n          this.#updateSources()\n\n          this.setPluginState({\n            currentDeviceId,\n            audioReady: true,\n          })\n        })\n        .catch((err) => {\n          this.setPluginState({\n            audioReady: false,\n            cameraError: err,\n          })\n          this.uppy.info(err.message, 'error')\n        })\n    })\n  }\n\n  #getMediaRecorderMimeType = () => {\n    const options = {}\n    // Safari doesn't have the `isTypeSupported` API.\n    if (MediaRecorder.isTypeSupported) {\n      if (this.opts.preferredAudioMimeType && MediaRecorder.isTypeSupported(this.opts.preferredAudioMimeType)) {\n        options.mimeType = this.opts.preferredAudioMimeType\n      }\n    }\n    options.mimeType = this.opts.preferredAudioMimeType\n    return options\n  }\n\n  #startRecording = async () => {\n    try {\n      await register(await connect())\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n\n    this.#recorder = new MediaRecorder(this.#stream, this.#getMediaRecorderMimeType())\n    this.#recordingChunks = []\n    let stoppingBecauseOfMaxSize = false\n    this.#recorder.addEventListener('dataavailable', (event) => {\n      this.#recordingChunks.push(event.data)\n\n      const { restrictions } = this.uppy.opts\n      if (this.#recordingChunks.length > 1\n        && restrictions.maxFileSize != null\n        && !stoppingBecauseOfMaxSize) {\n        const totalSize = this.#recordingChunks.reduce((acc, chunk) => acc + chunk.size, 0)\n        // Exclude the initial chunk from the average size calculation because it is likely to be a very small outlier\n        const averageChunkSize = (totalSize - this.#recordingChunks[0].size) / (this.#recordingChunks.length - 1)\n        const expectedEndChunkSize = averageChunkSize * 3\n        const maxSize = Math.max(0, restrictions.maxFileSize - expectedEndChunkSize)\n\n        if (totalSize > maxSize) {\n          stoppingBecauseOfMaxSize = true\n          this.uppy.info(this.i18n('recordingStoppedMaxSize'), 'warning', 4000)\n          this.#stopRecording()\n        }\n      }\n    })\n\n    // use a \"time slice\" of 500ms: ondataavailable will be called each 500ms\n    // smaller time slices mean we can more accurately check the max file size restriction\n    this.#recorder.start(500)\n\n    // Start the recordingLengthTimer if we are showing the recording length.\n    this.recordingLengthTimer = setInterval(() => {\n      const currentRecordingLength = this.getPluginState().recordingLengthSeconds\n      this.setPluginState({ recordingLengthSeconds: currentRecordingLength + 1 })\n    }, 1000)\n\n    this.setPluginState({\n      isRecording: true,\n    })\n  }\n\n  #stopRecording = () => {\n    const stopped = new Promise((resolve) => {\n      this.#recorder.addEventListener('stop', () => {\n        resolve()\n      })\n      this.#recorder.stop()\n\n      clearInterval(this.recordingLengthTimer)\n      this.setPluginState({ recordingLengthSeconds: 0 })\n    })\n\n    return stopped.then(() => {\n      this.setPluginState({\n        isRecording: false,\n      })\n      return this.#getAudio()\n    }).then((file) => {\n      try {\n        this.#capturedMediaFile = file\n        // create object url for capture result preview\n        this.setPluginState({\n          recordedAudio: URL.createObjectURL(file.data),\n        })\n      } catch (err) {\n        // Logging the error, except restrictions, which is handled in Core\n        if (!err.isRestriction) {\n          this.uppy.log(err)\n        }\n      }\n    }).then(() => {\n      this.#recordingChunks = null\n      this.#recorder = null\n    }, (error) => {\n      this.#recordingChunks = null\n      this.#recorder = null\n      throw error\n    })\n  }\n\n  #discardRecordedAudio = () => {\n    this.setPluginState({ recordedAudio: null })\n    this.#capturedMediaFile = null\n  }\n\n  #submit = () => {\n    try {\n      if (this.#capturedMediaFile) {\n        this.uppy.addFile(this.#capturedMediaFile)\n      }\n    } catch (err) {\n      // Logging the error, except restrictions, which is handled in Core\n      if (!err.isRestriction) {\n        this.uppy.log(err, 'error')\n      }\n    }\n  }\n\n  #stop = async () => {\n    if (this.#stream) {\n      const audioTracks = this.#stream.getAudioTracks()\n      audioTracks.forEach((track) => track.stop())\n    }\n\n    if (this.#recorder) {\n      await new Promise((resolve) => {\n        this.#recorder.addEventListener('stop', resolve, { once: true })\n        this.#recorder.stop()\n\n        clearInterval(this.recordingLengthTimer)\n      })\n    }\n\n    this.#recordingChunks = null\n    this.#recorder = null\n    this.#audioActive = false\n    this.#stream = null\n\n    this.setPluginState({\n      recordedAudio: null,\n      isRecording: false,\n      recordingLengthSeconds: 0,\n    })\n  }\n\n  #getAudio () {\n    // Sometimes in iOS Safari, Blobs (especially the first Blob in the recordingChunks Array)\n    // have empty 'type' attributes (e.g. '') so we need to find a Blob that has a defined 'type'\n    // attribute in order to determine the correct MIME type.\n    const mimeType = this.#recordingChunks.find(blob => blob.type?.length > 0).type\n\n    const fileExtension = this.getFileTypeExtension(mimeType)\n\n    if (!fileExtension) {\n      return Promise.reject(new Error(`Could not retrieve recording: Unsupported media type \"${mimeType}\"`))\n    }\n\n    const name = `audio-${Date.now()}.${fileExtension}`\n    const blob = new Blob(this.#recordingChunks, { type: mimeType })\n    const file = {\n      source: this.id,\n      name,\n      data: new Blob([blob], { type: mimeType }),\n      type: mimeType,\n    }\n\n    return Promise.resolve(file)\n  }\n\n  #changeSource = (deviceId) => {\n    this.#stop()\n    this.#start({ deviceId })\n  }\n\n  #updateSources = () => {\n    this.#mediaDevices.enumerateDevices().then(devices => {\n      this.setPluginState({\n        audioSources: devices.filter((device) => device.kind === 'audioinput'),\n      })\n    })\n  }\n\n  render () {\n    if (!this.#audioActive) {\n      this.#start()\n    }\n\n    const audioState = this.getPluginState()\n\n    if (!audioState.audioReady || !audioState.hasAudio) {\n      return (\n        <PermissionsScreen\n          icon={this.icon}\n          i18n={this.i18n}\n          hasAudio={audioState.hasAudio}\n        />\n      )\n    }\n\n    return (\n      <RecordingScreen\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...audioState}\n        audioActive={this.#audioActive}\n        onChangeSource={this.#changeSource}\n        onStartRecording={this.#startRecording}\n        onStopRecording={this.#stopRecording}\n        onDiscardRecordedAudio={this.#discardRecordedAudio}\n        onSubmit={this.#submit}\n        onStop={this.#stop}\n        i18n={this.i18n}\n        showAudioSourceDropdown={this.opts.showAudioSourceDropdown}\n        supportsRecording={supportsMediaRecorder()}\n        recording={audioState.isRecording}\n        stream={this.#stream}\n      />\n    )\n  }\n\n  install () {\n    this.setPluginState({\n      audioReady: false,\n      recordingLengthSeconds: 0,\n    })\n\n    const { target } = this.opts\n    if (target) {\n      this.mount(target, this)\n    }\n\n    if (this.#mediaDevices) {\n      this.#updateSources()\n\n      this.#mediaDevices.ondevicechange = () => {\n        this.#updateSources()\n\n        if (this.#stream) {\n          let restartStream = true\n\n          const { audioSources, currentDeviceId } = this.getPluginState()\n\n          audioSources.forEach((audioSource) => {\n            if (currentDeviceId === audioSource.deviceId) {\n              restartStream = false\n            }\n          })\n\n          if (restartStream) {\n            this.#stop()\n            this.#start()\n          }\n        }\n      }\n    }\n  }\n\n  getFileTypeExtension = (mimeType) => {\n    const ext = {\n      'audio/mp3': 'mp3',\n      'audio/mp4': 'mp4',\n      'audio/ogg': 'ogg',\n      'audio/wav': 'wav',\n      'audio/webm': 'webm',\n    }\n    return ext[mimeType] || null\n  }\n\n  uninstall () {\n    if (this.#stream) {\n      this.#stop()\n    }\n\n    this.unmount()\n  }\n}\n"],"mappings":"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"}